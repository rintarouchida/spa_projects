openapi: 3.1.0
info:
  title: もくもくMAPのAPI設計書
  description: |-
    # 本アプリケーションで使用するAPIの内容を記載

  version: 1.0.0
servers:
  - url: http://localhost:8000/api/

paths:
  # ログインAPI
  login/:
    post:
      tags:
        - ログインAPI
      description: アプリケーションにログインする
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: メールアドレス
                  example: "test@gmail.com"
                password:
                  type: string
                  description: パスワード
                  example: "password"
              required:
                - "email"
                - "password"
      responses:
        "200":
          description: ログインに成功
          content:
            application/json:
              schema:
                type: object
              example:
                message: "ログインに成功しました。"
        "401":
          description: ログインに失敗
          content:
            application/json:
              schema:
                type: object
              example:
                message: "メールアドレスまたはパスワードが間違っています"
  # ログアウトAPI
  logout/:
    post:
      tags:
        - ログアウトAPI
      description: アプリケーションをログアウトさせる
      responses:
        "200":
          description: ログアウトに成功
          content:
            application/json:
              schema:
                type: object
              example:
                message: "ログアウトが完了しました。"
  # 登録API
  register/:
    post:
      tags:
        - ユーザー登録API
      description: アプリケーションにユーザー登録する
      requestBody:
         content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    description: ユーザー名
                    maxLength: 255
                    minLength: 1
                    example: "山田太郎"
                  email:
                    type: string
                    description: メールアドレス
                    maxLength: 255
                    minLength: 1
                    format: email
                    example: "test@gmai.com"
                  password:
                    type: string
                    description: パスワード
                    maxLength: 255
                    minLength: 8
                    example: "password"
                  birthday:
                    type: string
                    description: 生年月日
                    format: date
                    nullable: true
                    example: "1998-12-26"
                  pref_id:
                    type: integer
                    description: 都道府県ID
                    example: 1
                  introduction:
                    type: string
                    description: 自己紹介
                    maxLength: 1000
                    nullable: true
                    example: "こんにちは"
                  twitter_url:
                    type: string
                    description: TwitterのURL
                    format: url
                    maxLength: 255
                    nullable: true
                    example: "https://twitter/example.com"
                required:
                  - name
                  - email
                  - password
                  - pref_id
      responses:
        "200":
          description: ユーザー登録完了
          content:
            application/json:
              schema:
                type: object
              example:
                message: "ユーザー登録が完了しました。"
        "422":
          description: バリデーションエラー
          content:
            application/json:
              schema:
                type: object
              example:
                message: "名前を入力してください"

# ログインユーザ情報編集API
  /update_auth/{auth_id}:
    post:
      tags:
        - ログインユーザ情報編集API
      description: ログインユーザ情報を更新する
      parameters:
        - name: "auth_id"
          in: "path"
          schema:
            type: "integer"
          description: "ログインユーザのID"
      requestBody:
        content:
          application/json:
            schema:
              type: "object"
              properties:
                name:
                  type: string
                  description: ユーザー名
                  maxLength: 255
                  minLength: 1
                  example: "山田太郎"
                email:
                  type: string
                  description: メールアドレス
                  maxLength: 255
                  minLength: 1
                  format: email
                  example: "test@gmai.com"
                birthday:
                  type: string
                  description: 生年月日
                  format: date
                  nullable: true
                  example: "1998-12-26"
                pref_id:
                  type: integer
                  description: 都道府県ID
                  example: 1
                introduction:
                  type: string
                  description: 自己紹介
                  maxLength: 1000
                  nullable: true
                  example: "こんにちは"
                twitter_url:
                  type: string
                  description: TwitterのURL
                  format: url
                  maxLength: 255
                  nullable: true
                  example: "https://twitter/example.com"
              required:
                  - name
                  - email
                  - password
                  - pref_id
      responses:
        '200':
          description: "Successfully updated the user information."
          content:
            application/json:
              schema:
                type: "object"
              example:
                message: "編集が完了しました。"
        "422":
          description: バリデーションエラー
          content:
            application/json:
              schema:
                type: object
              example:
                message: "名前を入力してください"
# ログインユーザ情報取得API
  /get_auth:
    get:
      tags:
        - ログインユーザ情報取得API
      responses:
        '200':
          description: ログインユーザー情報を取得する
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        format: int64
                        description: ユーザーのID
                        example: 1
                      name:
                        type: string
                        description: ユーザー名
                        example: "山田太郎"
                      email:
                        type: string
                        format: email
                        description: ユーザーのメールアドレス
                        example: "test@gmai.com"
                      pref_id:
                        type: integer
                        format: int64
                        description: ユーザーが住む都道府県のID
                        example: 1
                      birthday:
                        type: string
                        format: date
                        description: ユーザーの生年月日
                        example: "1998-12-26"
                      introduction:
                        type: string
                        description: ユーザーの自己紹介
                        example: "こんにちは"
                      twitter_url:
                        type: string
                        format: url
                        description: ユーザーのTwitterのURL
                        example: "https://twitter/example.com"
                      old:
                        type: integer
                        format: int32
                        description: ユーザーの年齢
                        example: 25
                      pref_name:
                        type: string
                        description: ユーザーが住む都道府県名
                        example: 東京都
                      image:
                        type: string
                        format: binary
                        description: ユーザーの画像
                        example: test_image.jpg
# パスワードリセット用メール送信API
  /send_email:
    post:
      tags:
        - パスワードリセット用メール送信API
      description: 指定されたメールアドレスにパスワード送信用のメールアドレスを送信する
      requestBody:
        content:
          application/json:
            schema:
              type: "object"
              properties:
                email:
                  type: "string"
                  format: "email"
                  description: "メールアドレス"
                  example: "test@gmai.com"
                  required: true
      responses:
        '200':
          description: "メール送信完了"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  message:
                    type: "string"
                    example: "メールを送信しました。"
        '400':
          description: "無効なユーザー、もしくは無効なトークンが検出された場合のエラー"
          content:
            application/json:
              schema:
                type: "object"
                properties:
                  message:
                    type: "string"
                    example:
                      - "無効なユーザーです。"
                      - "無効なトークンです。"
        "422":
          description: バリデーションエラー
          content:
            application/json:
              schema:
                type: object
              example:
                message: "メールアドレスを入力してください。"
